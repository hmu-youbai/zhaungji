#软碟通制作启动u盘

主要设置：分配磁盘
1G efi 逻辑分区
8G swap 主分区
一半 / 逻辑分区 ext4
一半 /home 逻辑分区 ext4


#安装成功之后如果需要修改mac物理地址，直接在设置种clone一个
更换ubuntu源：
lsb_release -a #查看版本如：jammy
更换对应版本的源，否则会安装报错



#安装ssh
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install openssh-server
sudo apt-get install openssh-server
sudo service ssh restart
sudo service ssh status


#安装docker
apt-get remove docker docker-engine docker.io containerd runc
sudo apt update sudo apt upgrade
apt-get install ca-certificates curl gnupg lsb-release
curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
apt-get install docker-ce docker-ce-cli containerd.io
systemctl start docker
apt-get -y install apt-transport-https ca-certificates curl software-properties-common
service docker restart
sudo docker version
#安装docker centos
yum-config-manager \
    --add-repo \
    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
sed -i 's/download.docker.com/mirrors.aliyun.com\/docker-ce/g' /etc/yum.repos.d/docker-ce.repo
yum makecache fast
yum install -y docker-ce



#挂载硬盘（旧）
fdisk -l
mkdir /data
mount /dev/sdb /data
mount
设置自动挂载
blkid #获取uuid
vim /etc/fstab
UUID=07280fed-e798-49d4-866b-d3443ca11a18 /backup            ext4    defaults        0       2 #不导出记录，普通硬盘开机检查顺序
reboot






bash <(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)
sudo nano /etc/default/grub
ipv6.disable=1
GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap ipv6.disable=1"
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
sudo reboot


#服务器部署v2ray和v2rayA
wget https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
unzip v2ray-linux-64.zip -d ./v2ray
mkdir -p /usr/local/share/v2ray && cp ./v2ray/*dat /usr/local/share/v2ray
install -Dm755 ./v2ray/v2ray /usr/local/bin/v2ray
下载v2rayA并安装
 yum install installer_redhat_arm64_2.2.4.6.rpm
sudo systemctl start v2raya.service
sudo systemctl enable v2raya.service

docker run -d \
  --cap-add=NET_ADMIN \
  -p 2017:2017 \
  -p 20170-20172:20170-20172 \
  --restart=always \
  --name v2raya \
  -e V2RAYA_LOG_FILE=/tmp/v2raya.log \
  -v /etc/v2raya:/etc/v2raya \
  mzz2017/v2raya:latest
部分网络问题，可以用docker代理转发

export http_proxy=http://localhost:20172
unset http_proxy

对于github：
git config --global http.proxy http://127.0.0.1:20172


#安装cws
cd ~
mkdir cws && cd cws
mkdir -p data/config


export MONGODB_PASSWORD=password  # MongoDB 密码
export INITIAL_ADMIN_PASSWORD=password  # 初始管理员密码


docker run -it --rm \
  -v $PWD/data/config:/tmp/config \
  ghcr.io/chatpire/chatgpt-web-share:latest \
  python /app/backend/manage.py create_config -O /tmp/config --generate-secrets --mongodb-url "mongodb://cws:${MONGODB_PASSWORD}@mongo:27017" --initial-admin-password "${INITIAL_ADMIN_PASSWORD}" --chatgpt-base-url http://ninja:7999/backend-api/


echo "TZ=Asia/Shanghai" > .env
echo "MONGO_INITDB_DATABASE=cws" >> .env
echo "MONGO_INITDB_ROOT_USERNAME=cws" >> .env
echo "MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD" >> .env



version: "3"

services:
  chatgpt-web-share:
    image: ghcr.io/chatpire/chatgpt-web-share:latest
    container_name: cws
    restart: unless-stopped
    ports:
      - 5000:80
    volumes:
      - ./data:/app/backend/data
    environment:
      - TZ=${TZ}
      - CWS_CONFIG_DIR=/app/backend/data/config
    depends_on:
      - mongo

  mongo:
    container_name: mongo
    image: mongo:6.0
    restart: always
    # ports:
    #   - 27017:27017
    volumes:
      - ./mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  ninja:
    image: ghcr.io/gngpp/ninja:latest
    container_name: ninja
    restart: unless-stopped
    command: run --disable-webui
    ports:
      - "7999:7999"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - "./har/gpt3:/root/.gpt3"
      - "./har/gpt4:/root/.gpt4"



